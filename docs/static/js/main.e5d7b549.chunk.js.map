{"version":3,"sources":["components/AddCategorias.js","helpers/GetGif.js","components/GitGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategorias","setcategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","protoType","PropTypes","func","isRequired","GetGif","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GitGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","GitExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"oNAKMA,EAAgB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEpB,EAAoCC,qBAApC,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXK,SAACC,GACZA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAG,OAAIP,GAAJ,mBAAkBO,OACnCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,aAyB/BZ,EAAce,UAAU,CACpBd,cAAee,IAAUC,KAAKC,YAGnBlB,Q,+BCtCFmB,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,uDAIMI,MAAMF,GAJZ,cAIZG,EAJY,gBAMGA,EAAUC,OANb,uBAMXC,EANW,EAMXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAZtB,kBAeZM,GAfY,4CAAH,sDCCNO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IACnC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,4BAAIA,QC0BDO,EA5BC,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAEhB,ECDyB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WAENxB,EAAQC,GAAWwB,MAAK,SAAAC,GAEhBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAMrB,CAACpB,IAGGqB,EDrBeK,CAAa1B,GAA7BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAIZ,OAFDO,QAAQC,IAAIrB,EAAKa,GAGZ,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEnD,sBAAKgB,UAAU,YAAf,UACMI,EAAS,mBAAGJ,UAAU,mCAAb,wBAA+D,KAC1E,6BAGQT,EAAKE,KAAI,SAACC,GAAD,OACL,cAAC,EAAD,eAEIA,GADCA,EAAIC,gBEWlBkB,EA3BM,WAGjB,MAAoC/C,mBAAS,CAAC,cAA9C,mBAAOgD,EAAP,KAAmBjD,EAAnB,KAKA,OACI,qCACG,8CACA,cAAC,EAAD,CAAeA,cAAgBA,IAC/B,uBACA,6BAEIiD,EAAWrB,KAAK,SAAAT,GAAS,OACtB,cAAC,EAAD,CAEAA,UAAWA,GADNA,Y,MCjBvB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e5d7b549.chunk.js","sourcesContent":["\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst AddCategorias = ({setcategorias}) => {\n\n    const [inputValue, setinputValue] = useState()\n\n    const inputChange = (e) =>{\n        setinputValue(e.target.value)\n    }\n\n    const enviar = (e) =>{\n        e.preventDefault()\n        if (inputValue.trim().length>2){\n            setcategorias(cat =>[inputValue,...cat]) \n            setinputValue('')\n        }\n            \n        \n    }\n\n    return (\n        <form onSubmit ={enviar}>\n            <input\n                type='text'\n                value={ inputValue }\n                onChange={ inputChange  }\n            />\n\n        </form>\n    )\n}\n\nAddCategorias.protoType={\n    setcategorias: PropTypes.func.isRequired\n}\n\nexport default AddCategorias\n","\nexport const GetGif = async(categoria) =>{        \n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria) }'&api_key=sG01SRQntkhcN3h2JZbpoQyKGeYSjhmB`\n    \n    const respuesta = await fetch(url);\n\n    const {data} = await respuesta.json();\n   \n    const gifs = data.map(img =>{\n        return{\n            id:img.id,\n            title:img.title,\n            url:img.images.downsized_medium.url\n        }\n    })\n   return gifs\n}","import React from 'react'\n\nexport const GitGridItem = ({id, title,url}) => {\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt ={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GitGridItem } from './GitGridItem';\n\nconst GifGrid = ({ categoria }) => {\n\n   const {data, loading} =useFetchGifs(categoria);\n\n   console.log(data,loading);\n    \n    return (\n        <>\n        <h3 className='animate__animated animate__fadeIn'>{categoria}</h3>\n       \n        <div className='card-grid'>\n            { loading? <p className='animate__animated animate__flash'>Cargando..</p>:null}\n            <ol>\n                {\n                   \n                    data.map((img)=>(\n                        <GitGridItem \n                        key={img.id}\n                        {...img}\n                        />\n                    ))\n                }\n            </ol>\n        </div>\n        </>\n    )\n}\n\nexport default GifGrid;\n","\n\nimport React, { useEffect, useState } from 'react'\nimport { GetGif } from '../helpers/GetGif'\n\nexport const useFetchGifs = (categoria) => {\n  \n    const [state, setstate] = useState({\n        data:[],\n        loading:true,\n    })\n\n    useEffect(() => {\n        \n        GetGif( categoria).then(imgs =>{\n            \n                setstate({\n                    data:imgs,\n                    loading:false,\n                })\n        \n        })\n\n\n    }, [categoria])\n\n    \n    return state;\n\n}\n","\nimport React, { useState } from 'react'\nimport AddCategorias from './components/AddCategorias';\nimport GifGrid from './components/GifGrid';\n\nconst GitExpertApp = () => {\n\n\n    const [categorias, setcategorias] = useState(['One Punch']);\n\n\n\n\n    return (\n        <>\n           <h2>GitExpertApp</h2> \n           <AddCategorias setcategorias={ setcategorias }/>\n           <hr/>\n           <ol>\n              {\n               categorias.map( categoria =>(\n                  <GifGrid \n                  key={categoria}\n                  categoria={categoria}\n                  />\n               ))\n            }\n           </ol>\n        </>\n    )\n}\n\nexport default GitExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GitExpertApp/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}